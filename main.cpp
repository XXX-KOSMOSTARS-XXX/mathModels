#include <stdio.h>
#include <iostream>
#include <vector>

using namespace std;

class techChain 		// класс для создания ТЦ с СО и расчета вероятностей
{
public:					// спецификатор доступа public

    int i; 				// максимальный индекс состояния

    void getProb() 		// функция для расчета вероятностей
    {
        double sum = 0; // сумма вероятностей

        for (int j = 0; j <= i; j++)
        {

        }

        if (sum != 1)
        {
            cout << "Ошибка расчета вероятностей, нормировочное уравнение не равно 1"
                 << "Сумма вероятностей = " << sum;
        }
    }

    void printProb() 	// функция для вывода на печать расчитанных вероятностей
    {
        cout << "Расчитанные вероятности: \n";
        
		for (int j = 0; j <= i; j++)
        {
            cout << "P(0," << P[j] << ")";
        }
        // добавить цикл для (со-0
        // и мб отдельный для конечного со
        // мб записывать вероятности сразу в стринг, чтоб не париться с индексами 
        
    }


private: 					// спецификатор доступа private

    vector <double> T,		// вектор средних продолжительностей t
					Tau, 	// вектор средних продолжительностей tau
					Lam, 	// вектор интенсивностей СП лямбда
					Mu, 	// вектор интенсивностей СП мю
					P;     	// вектор вероятностей

	//double inserter = 0;
    
	double getLam (double t, int k) 	// функция для расчета интенсивностей СП лямбда
    {
        Lam[k] = 1 / t;
        return Lam[k];
    }

    double getMu (double tau, int k) 	// функция для расчета интенсивностей СП мю
    {
        Mu[k] = 1 / tau;
        return Mu[k];
    }
};

    void getInfo() 		// функция для задания и расчета исходных данных
    {
        for (int j = 0; j <= i; j++)
        {
            
            if (j < i) 	// для СО с индексом от 0 до (i-1)
			{
				cout << "Введите Т(0,"<<(j + 1)<<"): ";
            	cin >> T[j];
			
            	cout << "\nСоответствующее этому значению Lam(0,"<<(j + 1)<<"): "<< getLam(T[j], j) << "\n";

            	cout << "\nВведите Тau("<<(j + 1)<<",0): ";
            	cin >> Tau[j];

            	cout << "\nСоответствующее этому значению Mu("<<(j + 1)<<",0): "<< getMu(Tau[j], j) << "\n";
             }
             
             else 		// для СО с индексом i
             {
            	cout << "Введите Т(1,"<<j<<"): ";
            	cin >> T[j];
            	cout << "\n";
			
            	cout << "Соответствующее этому значению Lam(1,"<<j<<"): "<< getLam(T[j], j) << "\n";

            	cout << "Введите Тau("<<j<<",1): ";
            	cin >> Tau[j];
            	cout << "\n";

            	cout << "Соответствующее этому значению Mu("<<j<<",1): "<< getMu(Tau[j], j) << "\n";
			 } 
        }
    };


	
int main(int argc, char** argv)
{
    setlocale(LC_ALL, "Russian"); 	// установка локали

    int i = 0;
    cout << "Введите максимальный индекс состояния вашей ТЦ: ";
    cin >> i; 						// задание максимального индекса состояния ТЦ
    cout << "\n";
    
	techChain ourChain; 			// создание экземпляра класса
    ourChain.i = i;
    ourChain.getInfo();
    ourChain.getProb();
    ourChain.printProb();

    return 0;
}



